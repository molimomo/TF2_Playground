import os
import argparse
import json
import pandas as pd
def parse_args():
    parser = argparse.ArgumentParser(description="Run Deep CNN.")
    parser.add_argument('--option', nargs='?', default='h_rank',
                        help='Option for Conv weight matrix.')
    parser.add_argument('--results_folder', nargs='?', default='./history',
                        help='Option for Conv weight matrix.')
    parser.add_argument('--target_folder', nargs='?', default='./aggregated_results',
                        help='Option for Conv weight matrix.')
    parser.add_argument('--target_rank', type=int, default=2,val_loss	val_accuracy	loss	accuracy
3.198330329	0.830500007	13.65597958	0.77713335
0.873340187	0.813000023	1.76562356	0.8198
0.482773715	0.842199981	0.592417611	0.82711667
0.37002881	0.883700013	0.39686138	0.87215
0.333446707	0.891099989	0.352542685	0.88645
0.319372732	0.903299987	0.315928791	0.8975
0.272133677	0.916299999	0.284353345	0.90846664
0.280852311	0.913800001	0.266983379	0.9156
0.259903784	0.91960001	0.257217672	0.91931665
0.249735759	0.921800017	0.248435115	0.92125
0.254731402	0.920099974	0.242150449	0.92475
0.264046058	0.918900013	0.238087677	0.92575
0.249329654	0.922699988	0.235126292	0.9267333
0.264709694	0.923200011	0.232971245	0.92728335
0.266616884	0.918099999	0.231421093	0.9273833
0.252259917	0.922800004	0.231494808	0.92786664
0.249758767	0.923500001	0.227811625	0.9288833
0.260604551	0.921599984	0.225111911	0.9291
0.253182669	0.922299981	0.224008057	0.92913336
0.276886163	0.917200029	0.223225436	0.93015
0.25809618	0.924499989	0.222908618	0.9305
0.250612673	0.923600018	0.222752563	0.93118334
0.252118089	0.923399985	0.220209935	0.93155
0.279905485	0.91869998	0.219489624	0.9313833
0.257369556	0.924099982	0.220503041	0.93155
0.27175936	0.913200021	0.218602271	0.9321333
0.25747537	0.922399998	0.219326031	0.93221664
0.253668537	0.926400006	0.219302196	0.93215
0.273711499	0.918600023	0.217479438	0.93271667
0.28187762	0.916499972	0.219318496	0.931
0.266656871	0.922999978	0.216815689	0.93343335
0.262551178	0.926299989	0.217501499	0.9320167
0.268782399	0.920599997	0.217646733	0.9317667
0.258600535	0.927600026	0.217094837	0.9334
0.255601898	0.923600018	0.217560182	0.9321
0.257549422	0.923799992	0.215390306	0.93361664
0.268363062	0.921800017	0.214712795	0.9334
0.253831555	0.925199986	0.214831144	0.9341
0.271945636	0.92019999	0.21497373	0.93373334
0.29815916	0.910700023	0.214651764	0.93365
0.26729876	0.917299986	0.213822198	0.9334
0.266837693	0.922100008	0.212700456	0.9349333
0.266760455	0.923900008	0.213448269	0.9342
0.257177481	0.922800004	0.21185147	0.9344
0.278559451	0.92049998	0.214362861	0.93295
0.26616589	0.920899987	0.211004527	0.935
0.273203688	0.919099987	0.212564473	0.9342333
0.252304041	0.925800025	0.212181862	0.93438333
0.26983787	0.923799992	0.212405306	0.93483335
0.279742665	0.922100008	0.210607593	0.93515
0.258462668	0.926299989	0.21372527	0.93471664
0.296104924	0.91930002	0.213747257	0.9335833
0.287821042	0.912999988	0.21370585	0.93375
0.330541368	0.90140003	0.212185862	0.93383336
0.278320479	0.920400023	0.211854817	0.93445
0.263879427	0.920300007	0.210232756	0.93415
0.272157533	0.919200003	0.210821727	0.93416667
0.260907058	0.922599971	0.212733217	0.9339333
0.259754136	0.923399985	0.211249146	0.9339833
0.274598485	0.924600005	0.210964755	0.9345667
0.264237627	0.926100016	0.212723063	0.9336333
0.271342553	0.921700001	0.211728852	0.9336333
0.261931786	0.926599979	0.210646815	0.93445
0.260858565	0.923600018	0.211228346	0.9346667
0.260206887	0.926900029	0.2120803	0.93438333
0.267444306	0.923399985	0.209169537	0.9353
0.261277617	0.924799979	0.209203903	0.93495
0.28812693	0.921599984	0.208220443	0.93518335
0.290226477	0.917999983	0.209212336	0.93451667
0.273573152	0.922800004	0.212174031	0.9339
0.281719731	0.921199977	0.209657717	0.9349833
0.262125346	0.925400019	0.209020982	0.9356667
0.278158493	0.91960001	0.209923086	0.9347
0.284564949	0.917599976	0.211073942	0.9341
0.28750247	0.916400015	0.210154906	0.9338
0.266715659	0.923500001	0.209145918	0.93553334
0.284488466	0.919399977	0.208251183	0.93558335
0.263429639	0.925300002	0.210355058	0.9356167
0.272527813	0.923699975	0.208978724	0.9345667
0.268501011	0.923399985	0.208701099	0.9349833
0.273635786	0.92049998	0.209112839	0.9346
0.283397821	0.9199	0.209911479	0.93478334
0.270238825	0.922699988	0.209985511	0.93586665
0.271743518	0.923300028	0.208926554	0.9359
0.278651448	0.920799971	0.207714874	0.9353333
0.275630864	0.920400023	0.209576911	0.93516666
0.274589216	0.922599971	0.208578078	0.93451667
0.285610579	0.916499972	0.208579004	0.93675
0.28013612	0.920899987	0.207486632	0.9353167
0.270018883	0.922599971	0.20885569	0.93581665
0.279335234	0.916800022	0.208972662	0.9343
0.276010169	0.920899987	0.207824945	0.93546665
0.27887886	0.925300002	0.206924942	0.9355
0.281704968	0.923500001	0.207112076	0.9356667
0.293487119	0.921800017	0.208588467	0.9354333
0.279668571	0.919399977	0.207916565	0.93441665
0.269929843	0.91960001	0.207208711	0.93595
0.267115083	0.921000004	0.20954432	0.93521667
0.292167787	0.921299994	0.209654856	0.9350333
0.272256172	0.921500027	0.207188772	0.936
                        help='Target rank for Conv low rank weight matrix.')
    parser.add_argument('--dataset', nargs='?', default='mnist',
                        help='Choose a Dataset')
    parser.add_argument('--epoch', type=int, default=100,
                        help='Training Epoch')
    return parser.parse_args()

def load_history(args):
    target_file = os.path.join(args.results_folder,"history_"+str(args.dataset)+"_"+str(args.option)+".json")
    print(target_file)
    df_history = pd.read_json(target_file)
    if not os.path.isdir(args.target_folder):
        os.makedirs(args.target_folder)
    df_history.to_csv(os.path.join(args.target_folder,'history_'+str(args.dataset)+'_'+str(args.option)+'.csv'),index=False)

if __name__ == '__main__':
    # Data loading
    args = parse_args()
    load_history(args)

